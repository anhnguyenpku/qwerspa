{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/schPayment.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/schPayment.vue","filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/schPayment.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/spa","root":"/home/snr/Desktop/Project/spa","generatorOpts":{"filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/schPayment.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/schPayment.vue"}},"code":"var draggable;\nmodule.link(\"vuedraggable\", {\n  \"default\": function (v) {\n    draggable = v;\n  }\n}, 0);\nvar formatCurrency;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  formatCurrency: function (v) {\n    formatCurrency = v;\n  }\n}, 1);\nvar GeneralFunction;\nmodule.link(\"../../../imports/api/methods/generalFunction\", {\n  GeneralFunction: function (v) {\n    GeneralFunction = v;\n  }\n}, 2);\nvar getCurrencySymbolById;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  getCurrencySymbolById: function (v) {\n    getCurrencySymbolById = v;\n  }\n}, 3);\nvar WB_waterBillingSetup;\nmodule.link(\"../../collection/waterBillingSetup\", {\n  WB_waterBillingSetup: function (v) {\n    WB_waterBillingSetup = v;\n  }\n}, 4);\nvar compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label-sch\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 5);\nvar Sch_PaymentReact;\nmodule.link(\"../../collection/schPayment\", {\n  Sch_PaymentReact: function (v) {\n    Sch_PaymentReact = v;\n  }\n}, 6);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Sch_PaymentReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    }\n  },\n  components: {\n    draggable: draggable\n  },\n  data: function () {\n    return {\n      schPaymentData: [],\n      schPaymentDataDisplay: [],\n      multipleSelection: [],\n      schPaymentId: \"\",\n      loading: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddSchPayment: false,\n      dialogUpdateSchPayment: false,\n      dialogShowSchPayment: false,\n      typeDiscount: \"\",\n      fullScreen: true,\n      isOverDue: false,\n      schPaymentForm: {\n        totalPaid: 0,\n        amount: 0,\n        paymentDate: moment().toDate(),\n        dueDate: moment().add(1, \"month\").toDate(),\n        note: \"\",\n        fee: 0,\n        totalNetAmount: 0,\n        balanceUnPaid: 0,\n        address: \"\",\n        isPaidAll: false,\n        studentId: \"\",\n        classId: \"\",\n        penalty: 0,\n        paymentNo: \"\"\n      },\n      rules: {\n        paymentDate: [{\n          type: 'date',\n          required: true,\n          message: 'Please input SchPaymentDate',\n          trigger: 'blur'\n        }],\n        paymentNo: [{\n          required: true,\n          type: 'string',\n          message: 'Please input Payment No',\n          trigger: 'blur'\n        }],\n        studentId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose Student',\n          trigger: 'change'\n        }],\n        classId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose Class',\n          trigger: 'change'\n        }] // note: [{required: true, type: 'string', message: 'Please input Memo', trigger: 'blur'}],\n\n      },\n      // Options\n      itemOption: [],\n      studentOption: [],\n      termOption: [],\n      dialog: true,\n      notifications: false,\n      sound: true,\n      widgets: false,\n      labelPosition: \"right\",\n      options: {\n        disabledDate: function (time) {\n          return false;\n        }\n      },\n      disabledDate: false,\n      closeDate: \"\",\n      type: \"\",\n      schPaymentDetail: {},\n      classOption: [],\n      disabledStudent: true,\n      pickerDateOptions: {\n        shortcuts: [{\n          text: 'Last week',\n          onClick: function (picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Last month',\n          onClick: function (picker) {\n            var end = moment().add(-1, \"month\").endOf(\"month\").toDate();\n            var start = moment().add(-1, \"month\").startOf(\"month\").toDate();\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Last 3 months',\n          onClick: function (picker) {\n            var end = moment().add(-1, \"month\").endOf(\"month\").toDate();\n            var start = moment().add(-4, \"month\").startOf(\"month\").toDate();\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'This month',\n          onClick: function (picker) {\n            var end = moment().endOf(\"month\").toDate();\n            var start = moment().startOf(\"month\").toDate();\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Today',\n          onClick: function (picker) {\n            var end = new Date();\n            var start = new Date();\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  mounted: function () {\n    this.$jQuery('body').off();\n    var vm = this;\n    vm.options = {\n      disabledDate: function (time) {\n        var min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n        return time.getTime() < min;\n      }\n    };\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      var skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, skip, val + skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      var skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, skip, this.currentSize + skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      var skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, skip, this.currentSize + skip);\n    },\n\n    /*dialogAddSchPayment(val) {\n        if (val) {\n            this._inputMaskSchPayment();\n        }\n    },*/\n    dialogUpdateSchPayment: function (val) {\n      if (val) {\n        this._inputMaskSchPayment();\n      }\n    },\n    \"schPaymentForm.studentId\": function (val) {\n      var vm = this;\n\n      if (val) {\n        Meteor.call(\"querySchPaymentScheduleByStudentId\", val, vm.schPaymentForm.classId, function (err, result) {\n          if (result) {\n            vm.schPaymentData = result;\n          }\n\n          vm.getTotal();\n        });\n      } else {\n        Meteor.call(\"querySchPaymentScheduleByStudentId\", \"\", vm.schPaymentForm.classId, function (err, result) {\n          if (result) {\n            vm.schPaymentData = result;\n          }\n\n          vm.getTotal();\n        });\n      }\n    },\n    \"schPaymentForm.isPaidAll\": function (val) {\n      var vm = this;\n      var ind = 0;\n\n      if (val === false) {\n        vm.schPaymentForm.isAllTerm = false;\n      }\n\n      this.schPaymentData.map(function (obj) {\n        if (obj.isShow) {\n          obj.isPaid = val;\n          vm.updateSchPaymentDetail(obj, ind);\n        }\n\n        ind++;\n      });\n    },\n    isOverDue: function (val) {\n      var vm = this;\n      vm.overDueStatus(val);\n    },\n    \"schPaymentForm.classId\": function (val) {\n      if (val) {\n        this.disabledStudent = false;\n        this.schPaymentForm.studentId = \"\";\n        this.studentOpt(val);\n      } else {\n        this.disabledStudent = true;\n      }\n    },\n    \"schPaymentForm.paymentDate\": function (val) {\n      if (val) {\n        this.getPaymentNoByRoleAndDate(val);\n        var vm = this;\n\n        if (this.dialogAddSchPayment === true) {\n          var ind = 0;\n          vm.schPaymentForm.paymentDate = val;\n          vm.schPaymentData.map(function (obj) {\n            obj.dayOverDue = moment(val).startOf(\"days\").diff(moment(obj.receivePaymentScheduleDate).startOf(\"days\").toDate(), \"days\") < 0 ? 0 : moment(val).startOf(\"days\").diff(moment(obj.receivePaymentScheduleDate).startOf(\"days\").toDate(), \"days\");\n            vm.updateSchPaymentDetailPaid(obj, ind);\n            ind++;\n          });\n        }\n      }\n    },\n    \"schPaymentForm.penalty\": function (val) {\n      this.schPaymentForm.penalty = val || 0;\n      this.getTotal();\n    },\n    \"schPaymentForm.fee\": function (val) {\n      this.schPaymentForm.fee = val || 0;\n      this.getTotal();\n    }\n  },\n  methods: {\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    _inputMaskSchPayment: function () {\n      /*setTimeout(() => {\n          if ($(\".el-inputAmount\").length) {\n              new this.$_Cleave('.el-inputAmount', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n           if ($(\".el-inputDR\").length) {\n              new this.$_Cleave('.el-inputDR', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n           if ($(\".el-inputCR\").length) {\n              new this.$_Cleave('.el-inputCR', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n        }, 200)*/\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this = this;\n\n      Meteor.call('querySchPayment', {\n        q: val,\n        filter: this.filter,\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this.schPaymentDataDisplay = result.content;\n          _this.count = result.countSchPayment;\n        }\n\n        _this.isSearching = false;\n      });\n    }, 300),\n    classOpt: function () {\n      var _this2 = this;\n\n      Meteor.call('queryClassOptionActive', {}, function (err, result) {\n        _this2.classOption = result;\n      });\n    },\n    studentOpt: function (classId) {\n      var _this3 = this;\n\n      Meteor.call(\"queryStudentOptionByClass\", classId, function (err, result) {\n        if (result) {\n          _this3.studentOption = result;\n        }\n      });\n    },\n    saveSchPayment: function (isCloseDialog, event, isPrint) {\n      var _this4 = this;\n\n      event.preventDefault();\n      var vm = this;\n      this.$refs[\"schPaymentFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var schPaymentDoc = {\n            totalPaid: vm.$_numeral(vm.schPaymentForm.totalPaid).value(),\n            totalNetAmount: vm.$_numeral(vm.schPaymentForm.totalNetAmount).value(),\n            totalWaived: vm.$_numeral(vm.schPaymentForm.totalWaived).value(),\n            balanceUnPaid: vm.$_numeral(vm.schPaymentForm.totalNetAmount).value() - vm.$_numeral(vm.schPaymentForm.totalPaid).value() - vm.$_numeral(vm.schPaymentForm.totalWaived).value() + vm.schPaymentForm.penalty + vm.schPaymentForm.fee,\n            paymentDate: moment(vm.schPaymentForm.paymentDate).toDate(),\n            paymentDateName: moment(vm.schPaymentForm.paymentDate).format(\"DD/MM/YYYY\"),\n            note: vm.schPaymentForm.note,\n            paymentNo: vm.schPaymentForm.paymentNo,\n            penalty: vm.schPaymentForm.penalty,\n            fee: vm.schPaymentForm.fee,\n            rolesArea: Session.get('area'),\n            studentId: vm.schPaymentForm.studentId,\n            classId: vm.schPaymentForm.classId\n          };\n          schPaymentDoc.schedule = vm.schPaymentData;\n          Meteor.call(\"insertSchPayment\", schPaymentDoc, function (err, result) {\n            if (!err) {\n              if (isCloseDialog) {\n                _this4.dialogAddSchPayment = false;\n              } else {\n                vm.getPaymentNoByRoleAndDate(_this4.schPaymentForm.paymentDate);\n              }\n\n              vm.schPaymentData.forEach(function (obj) {\n                if (obj.isPaid === true) {\n                  Meteor.call(\"updatePaymentScheduleByPayment\", obj, schPaymentDoc.paymentDate, function (err, re) {\n                    if (err) {\n                      console.log(err.message);\n                    }\n                  });\n                }\n              });\n\n              if (isPrint) {\n                FlowRouter.go('/sch-data/schPayment/print?pmt=' + result);\n              } else {\n                vm.$message({\n                  duration: 1000,\n                  message: \"Save Successfully!\",\n                  type: 'success'\n                });\n              }\n\n              vm.resetForm();\n            }\n          });\n        }\n      });\n    },\n    removeSchPayment: function (index, row, rows) {\n      var _this5 = this;\n\n      var vm = this;\n\n      if (row.canRemove === true) {\n        vm.$confirm(this.langConfig['messageWarning'], this.langConfig['warning'], {\n          confirmButtonText: 'OK',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }).then(function () {\n          Meteor.call(\"removeSchPayment\", row._id, function (err, result) {\n            if (!err) {\n              rows.splice(index, 1);\n              vm.$message({\n                message: \" \" + row.paymentDateName + \" \" + _this5.langConfig['removeSuccess'],\n                type: 'success'\n              });\n            } else {\n              vm.$message({\n                type: 'error',\n                message: _this5.langConfig['removeFail']\n              });\n            }\n          });\n        }).catch(function () {\n          vm.$message({\n            type: 'info',\n            message: 'Delete canceled'\n          });\n        });\n      } else {\n        vm.$message({\n          type: 'error',\n          message: this.langConfig['message']\n        });\n      }\n    },\n    popupSchPaymentAdd: function () {\n      this.resetForm();\n      this.classOpt();\n      var vm = this;\n      $(\".el-dialog__title\").text(this.langConfig['add']);\n      this.studentOpt();\n      this.getPaymentNoByRoleAndDate(this.schPaymentForm.paymentDate);\n    },\n    updateSchPaymentDetail: function (row, index) {\n      var vm = this;\n\n      if (row.isPaid === false) {\n        row.paid = 0;\n        row.isApplyTerm = false;\n      }\n\n      if (row.isPaid) {\n        row.paid = vm.$_numeral(row.netAmount).value() - (row.waived || 0);\n        row.netAmount = formatCurrency(row.netAmount);\n      } else {\n        row.netAmount = formatCurrency(row.netAmount);\n        row.paid = 0;\n      }\n\n      this.schPaymentData[index] = row;\n      vm.getTotal();\n    },\n    updateSchPaymentDetailPaid: function (row, index) {\n      if (row.netAmount !== row.paid) {\n        if (row.paid > 0) {\n          row.isPaid = true;\n        } else {\n          row.isPaid = false;\n        }\n\n        row.netAmount = row.netAmount;\n        this.schPaymentData[index] = row;\n      } else {\n        if (row.paid > 0) {\n          row.isPaid = true;\n        } else {\n          row.isPaid = false;\n        }\n\n        this.schPaymentData[index] = row;\n        this.updateSchPaymentDetail(row, index);\n      }\n\n      this.getTotal();\n    },\n    cancel: function () {\n      this.resetForm();\n      this.$message({\n        type: 'info',\n        message: 'Canceled'\n      });\n    },\n    resetForm: function () {\n      this.schPaymentData = [];\n      this.schPaymentForm.isPaidAll = false;\n      this.schPaymentForm.isApplyTerm = false;\n\n      if (this.$refs[\"schPaymentFormAdd\"]) {\n        this.$refs[\"schPaymentFormAdd\"].resetFields();\n        this.getTotal();\n        this.refForm = \"\";\n      }\n    },\n    getTotal: function () {\n      var vm = this;\n      var totalNetAmount = 0;\n      var totalPaid = 0;\n      var totalWaived = 0;\n      vm.schPaymentData.forEach(function (obj) {\n        if (obj.isShow) {\n          totalNetAmount += parseFloat(vm.$_numeral(obj.netAmount).value() || 0);\n          totalPaid += parseFloat(vm.$_numeral(obj.paid).value() || 0);\n          totalWaived += parseFloat(vm.$_numeral(obj.waived).value() || 0);\n        }\n      });\n      var companyDoc = WB_waterBillingSetup.findOne({\n        rolesArea: Session.get(\"area\")\n      });\n      this.currencySymbol = getCurrencySymbolById(companyDoc.baseCurrency);\n      vm.schPaymentForm.totalNetAmount = formatCurrency(totalNetAmount, companyDoc.baseCurrency);\n      vm.schPaymentForm.totalWaived = formatCurrency(totalWaived, companyDoc.baseCurrency);\n      vm.schPaymentForm.totalPaid = formatCurrency(totalPaid + vm.schPaymentForm.penalty + vm.schPaymentForm.fee, companyDoc.baseCurrency);\n      vm.schPaymentForm.balanceUnPaid = formatCurrency(totalNetAmount - totalPaid - totalWaived, companyDoc.baseCurrency);\n    },\n    overDueStatus: function (val) {\n      var vm = this;\n\n      if (val) {\n        vm.schPaymentData.map(function (obj) {\n          if (obj.isShow === true && obj.receivePaymentScheduleDate.getTime() > vm.schPaymentForm.paymentDate.getTime()) {\n            obj.isShow = false;\n          }\n\n          return obj;\n        });\n      } else {\n        vm.schPaymentData.map(function (obj) {\n          obj.isShow = true;\n          return obj;\n        });\n      }\n    },\n    getPaymentNoByRoleAndDate: function (date) {\n      var vm = this;\n      Meteor.call(\"sch_getPaymentNoByRoleAndDate\", Session.get(\"area\"), date, function (err, result) {\n        if (!err) {\n          vm.schPaymentForm.paymentNo = result;\n        }\n      });\n    }\n  },\n  created: function () {\n    this.isSearching = true;\n    this.queryData();\n    this.getTotal();\n    this.classOpt();\n    Meteor.subscribe('Sch_PaymentReact');\n  },\n  computed: {\n    langConfig: function () {\n      var _this6 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this6.langSession;\n      })[0]['payment'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/spa/imports/vue/ui/schPayment.vue"],"names":["draggable","module","link","v","formatCurrency","GeneralFunction","getCurrencySymbolById","WB_waterBillingSetup","compoLang","Sch_PaymentReact","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","components","data","schPaymentData","schPaymentDataDisplay","multipleSelection","schPaymentId","loading","isSearching","currentPage","count","dialogAddSchPayment","dialogUpdateSchPayment","dialogShowSchPayment","typeDiscount","fullScreen","isOverDue","schPaymentForm","totalPaid","amount","paymentDate","moment","toDate","dueDate","add","note","fee","totalNetAmount","balanceUnPaid","address","isPaidAll","studentId","classId","penalty","paymentNo","rules","type","required","message","trigger","itemOption","studentOption","termOption","dialog","notifications","sound","widgets","labelPosition","options","disabledDate","time","closeDate","schPaymentDetail","classOption","disabledStudent","pickerDateOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","endOf","startOf","mounted","$jQuery","off","min","watch","val","_inputMaskSchPayment","Meteor","call","err","result","getTotal","ind","isAllTerm","map","obj","isShow","isPaid","updateSchPaymentDetail","overDueStatus","studentOpt","getPaymentNoByRoleAndDate","dayOverDue","diff","receivePaymentScheduleDate","updateSchPaymentDetailPaid","methods","handleSizeChange","handleCurrentChange","_","debounce","limit","q","filter","content","countSchPayment","classOpt","saveSchPayment","isCloseDialog","event","isPrint","preventDefault","$refs","validate","valid","schPaymentDoc","$_numeral","value","totalWaived","paymentDateName","format","rolesArea","schedule","forEach","re","console","log","FlowRouter","go","$message","duration","resetForm","removeSchPayment","index","row","rows","canRemove","$confirm","langConfig","confirmButtonText","cancelButtonText","then","_id","splice","catch","popupSchPaymentAdd","$","paid","isApplyTerm","netAmount","waived","cancel","resetFields","refForm","parseFloat","companyDoc","findOne","currencySymbol","baseCurrency","date","created","subscribe","computed","config","lang"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable';\nimport {formatCurrency} from \"../../../imports/api/methods/roundCurrency\";\nimport {GeneralFunction} from \"../../../imports/api/methods/generalFunction\";\nimport {getCurrencySymbolById} from \"../../../imports/api/methods/roundCurrency\";\nimport {WB_waterBillingSetup} from \"../../collection/waterBillingSetup\";\n// require('cleave.js/dist/addons/cleave-phone.ac');\n// require('cleave.js/dist/addons/cleave-phone.{country}');\n\nimport compoLang from '../../../both/i18n/lang/elem-label-sch'\nimport {Sch_PaymentReact} from \"../../collection/schPayment\";\n\nexport default {\n    meteor: {\n        langSession() {\n            return Session.get('lang') || \"en\";\n        },\n        disabledRemove() {\n            return Session.get(\"canRemove\");\n        },\n        disabledUpdate() {\n            return Session.get(\"canUpdate\");\n        },\n        newRe() {\n            let vm = this;\n            Sch_PaymentReact.find({}).fetch();\n            vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n        }\n    },\n    components: {\n        draggable\n    },\n    data() {\n        return {\n            schPaymentData: [],\n            schPaymentDataDisplay: [],\n            multipleSelection: [],\n            schPaymentId: \"\",\n            loading: false,\n            searchData: '',\n            isSearching: false,\n            currentPage: 1,\n            currentSize: 10,\n            count: 0,\n            dialogAddSchPayment: false,\n            dialogUpdateSchPayment: false,\n            dialogShowSchPayment: false,\n            typeDiscount: \"\",\n            fullScreen: true,\n\n            isOverDue: false,\n            schPaymentForm: {\n                totalPaid: 0,\n                amount: 0,\n                paymentDate: moment().toDate(),\n                dueDate: moment().add(1, \"month\").toDate(),\n\n                note: \"\",\n\n                fee: 0,\n                totalNetAmount: 0,\n                balanceUnPaid: 0,\n                address: \"\",\n\n                isPaidAll: false,\n                studentId: \"\",\n                classId: \"\",\n                penalty: 0,\n                paymentNo: \"\"\n\n            },\n            rules: {\n                paymentDate: [{\n                    type: 'date',\n                    required: true,\n                    message: 'Please input SchPaymentDate',\n                    trigger: 'blur'\n                }],\n                paymentNo: [{required: true, type: 'string', message: 'Please input Payment No', trigger: 'blur'}],\n\n                studentId: [{\n                    required: true,\n                    type: 'string',\n                    message: 'Please choose Student',\n                    trigger: 'change'\n                }]\n                ,\n                classId: [{\n                    required: true,\n                    type: 'string',\n                    message: 'Please choose Class',\n                    trigger: 'change'\n                }]\n                // note: [{required: true, type: 'string', message: 'Please input Memo', trigger: 'blur'}],\n            },\n\n            // Options\n            itemOption: [],\n            studentOption: [],\n            termOption: [],\n\n            dialog: true,\n            notifications: false,\n            sound: true,\n            widgets: false,\n            labelPosition: \"right\",\n            options: {\n                disabledDate(time) {\n                    return false;\n                }\n            },\n            disabledDate: false,\n            closeDate: \"\",\n            type: \"\",\n            schPaymentDetail: {},\n\n            classOption: [],\n            disabledStudent: true,\n            pickerDateOptions: {\n                shortcuts: [{\n                    text: 'Last week',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: 'Last month',\n                    onClick(picker) {\n                        const end = moment().add(-1, \"month\").endOf(\"month\").toDate();\n                        const start = moment().add(-1, \"month\").startOf(\"month\").toDate();\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: 'Last 3 months',\n                    onClick(picker) {\n                        const end = moment().add(-1, \"month\").endOf(\"month\").toDate();\n                        const start = moment().add(-4, \"month\").startOf(\"month\").toDate();\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: 'This month',\n                    onClick(picker) {\n                        const end = moment().endOf(\"month\").toDate();\n                        const start = moment().startOf(\"month\").toDate();\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: 'Today',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        picker.$emit('pick', [start, end]);\n                    }\n                }]\n            },\n        }\n    },\n    mounted() {\n        this.$jQuery('body').off();\n\n\n        let vm = this;\n        vm.options = {\n            disabledDate(time) {\n                let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                return time.getTime() < min;\n            }\n        }\n    },\n    watch: {\n        currentSize(val) {\n            this.isSearching = true;\n            let skip = (this.currentPage - 1) * val;\n            this.queryData(this.searchData, skip, val + skip);\n        },\n        currentPage(val) {\n            this.isSearching = true;\n            let skip = (val - 1) * this.currentSize;\n            this.queryData(this.searchData, skip, this.currentSize + skip);\n        },\n        searchData(val) {\n            this.isSearching = true;\n            let skip = (this.currentPage - 1) * this.currentSize;\n            this.queryData(val, skip, this.currentSize + skip);\n        },\n        /*dialogAddSchPayment(val) {\n            if (val) {\n                this._inputMaskSchPayment();\n            }\n        },*/\n        dialogUpdateSchPayment(val) {\n            if (val) {\n                this._inputMaskSchPayment();\n            }\n        },\n        \"schPaymentForm.studentId\"(val) {\n            let vm = this;\n            if (val) {\n                Meteor.call(\"querySchPaymentScheduleByStudentId\", val, vm.schPaymentForm.classId, (err, result) => {\n                    if (result) {\n                        vm.schPaymentData = result;\n                    }\n                    vm.getTotal();\n                })\n            } else {\n                Meteor.call(\"querySchPaymentScheduleByStudentId\", \"\", vm.schPaymentForm.classId, (err, result) => {\n                    if (result) {\n                        vm.schPaymentData = result;\n\n                    }\n                    vm.getTotal();\n                })\n            }\n        },\n        \"schPaymentForm.isPaidAll\"(val) {\n            let vm = this;\n            let ind = 0;\n            if (val === false) {\n                vm.schPaymentForm.isAllTerm = false;\n            }\n            this.schPaymentData.map((obj) => {\n                if (obj.isShow) {\n                    obj.isPaid = val;\n                    vm.updateSchPaymentDetail(obj, ind);\n                }\n                ind++;\n            })\n        },\n        isOverDue(val) {\n            let vm = this;\n            vm.overDueStatus(val);\n        },\n        \"schPaymentForm.classId\"(val) {\n            if (val) {\n                this.disabledStudent = false;\n                this.schPaymentForm.studentId = \"\";\n                this.studentOpt(val);\n            } else {\n                this.disabledStudent = true;\n\n            }\n        },\n        \"schPaymentForm.paymentDate\"(val) {\n            if (val) {\n                this.getPaymentNoByRoleAndDate(val);\n                let vm = this;\n                if (this.dialogAddSchPayment === true) {\n                    let ind = 0;\n                    vm.schPaymentForm.paymentDate = val;\n                    vm.schPaymentData.map((obj) => {\n                        obj.dayOverDue = moment(val).startOf(\"days\").diff(moment(obj.receivePaymentScheduleDate).startOf(\"days\").toDate(), \"days\") < 0 ? 0 : moment(val).startOf(\"days\").diff(moment(obj.receivePaymentScheduleDate).startOf(\"days\").toDate(), \"days\");\n                        vm.updateSchPaymentDetailPaid(obj, ind);\n                        ind++;\n                    });\n                }\n            }\n        },\n        \"schPaymentForm.penalty\"(val) {\n            this.schPaymentForm.penalty = val || 0;\n            this.getTotal();\n\n        },\n        \"schPaymentForm.fee\"(val) {\n            this.schPaymentForm.fee = val || 0;\n            this.getTotal();\n\n        }\n    },\n    methods: {\n        handleSizeChange(val) {\n            this.currentSize = val;\n        },\n        handleCurrentChange(val) {\n            this.currentPage = val;\n        },\n        _inputMaskSchPayment() {\n            /*setTimeout(() => {\n                if ($(\".el-inputAmount\").length) {\n                    new this.$_Cleave('.el-inputAmount', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n                if ($(\".el-inputDR\").length) {\n                    new this.$_Cleave('.el-inputDR', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n                if ($(\".el-inputCR\").length) {\n                    new this.$_Cleave('.el-inputCR', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n\n            }, 200)*/\n        },\n        queryData: _.debounce(function (val, skip, limit) {\n            Meteor.call('querySchPayment', {\n                q: val,\n                filter: this.filter,\n                options: {skip: skip || 0, limit: limit || 10}\n            }, (err, result) => {\n                if (!err) {\n                    this.schPaymentDataDisplay = result.content;\n                    this.count = result.countSchPayment;\n                }\n                this.isSearching = false;\n            });\n        }, 300),\n        classOpt() {\n            Meteor.call('queryClassOptionActive', {}, (err, result) => {\n                this.classOption = result;\n            })\n        },\n        studentOpt(classId) {\n            Meteor.call(\"queryStudentOptionByClass\", classId, (err, result) => {\n                if (result) {\n                    this.studentOption = result;\n                }\n            })\n        },\n        saveSchPayment(isCloseDialog, event, isPrint) {\n            event.preventDefault();\n            let vm = this;\n            this.$refs[\"schPaymentFormAdd\"].validate((valid) => {\n                if (valid) {\n                    let schPaymentDoc = {\n                        totalPaid: vm.$_numeral(vm.schPaymentForm.totalPaid).value(),\n                        totalNetAmount: vm.$_numeral(vm.schPaymentForm.totalNetAmount).value(),\n                        totalWaived: vm.$_numeral(vm.schPaymentForm.totalWaived).value(),\n\n                        balanceUnPaid: vm.$_numeral(vm.schPaymentForm.totalNetAmount).value() - vm.$_numeral(vm.schPaymentForm.totalPaid).value() - vm.$_numeral(vm.schPaymentForm.totalWaived).value() + vm.schPaymentForm.penalty + vm.schPaymentForm.fee,\n\n                        paymentDate: moment(vm.schPaymentForm.paymentDate).toDate(),\n                        paymentDateName: moment(vm.schPaymentForm.paymentDate).format(\"DD/MM/YYYY\"),\n                        note: vm.schPaymentForm.note,\n                        paymentNo: vm.schPaymentForm.paymentNo,\n                        penalty: vm.schPaymentForm.penalty,\n                        fee: vm.schPaymentForm.fee,\n\n                        rolesArea: Session.get('area'),\n                        studentId: vm.schPaymentForm.studentId,\n                        classId: vm.schPaymentForm.classId,\n                    };\n                    schPaymentDoc.schedule = vm.schPaymentData;\n                    Meteor.call(\"insertSchPayment\", schPaymentDoc, (err, result) => {\n                        if (!err) {\n\n\n                            if (isCloseDialog) {\n                                this.dialogAddSchPayment = false;\n                            } else {\n                                vm.getPaymentNoByRoleAndDate(this.schPaymentForm.paymentDate);\n                            }\n\n                            vm.schPaymentData.forEach((obj) => {\n                                if (obj.isPaid === true) {\n                                    Meteor.call(\"updatePaymentScheduleByPayment\", obj, schPaymentDoc.paymentDate, (err, re) => {\n                                        if (err) {\n                                            console.log(err.message);\n                                        }\n                                    })\n                                }\n                            });\n\n                            if (isPrint) {\n                                FlowRouter.go('/sch-data/schPayment/print?pmt=' + result);\n                            } else {\n                                vm.$message({\n                                    duration: 1000,\n                                    message: `Save Successfully!`,\n                                    type: 'success'\n                                });\n                            }\n\n                            vm.resetForm();\n                        }\n                    })\n                }\n            })\n\n\n        },\n\n        removeSchPayment(index, row, rows) {\n            let vm = this;\n            if (row.canRemove === true) {\n                vm.$confirm(this.langConfig['messageWarning'], this.langConfig['warning'], {\n                    confirmButtonText: 'OK',\n                    cancelButtonText: 'Cancel',\n                    type: 'warning'\n                }).then(() => {\n                    Meteor.call(\"removeSchPayment\", row._id, (err, result) => {\n                        if (!err) {\n                            rows.splice(index, 1);\n                            vm.$message({\n                                message: ` ${row.paymentDateName} ` + this.langConfig['removeSuccess'],\n                                type: 'success'\n                            });\n\n                        } else {\n                            vm.$message({\n                                type: 'error',\n                                message: this.langConfig['removeFail']\n                            });\n                        }\n\n                    })\n                }).catch(() => {\n                    vm.$message({\n                        type: 'info',\n                        message: 'Delete canceled'\n                    });\n                });\n            } else {\n                vm.$message({\n                    type: 'error',\n                    message: this.langConfig['message']\n                });\n            }\n        },\n        popupSchPaymentAdd() {\n            this.resetForm();\n            this.classOpt();\n            let vm = this;\n            $(\".el-dialog__title\").text(this.langConfig['add']);\n\n            this.studentOpt();\n            this.getPaymentNoByRoleAndDate(this.schPaymentForm.paymentDate);\n        },\n        updateSchPaymentDetail(row, index) {\n            let vm = this;\n            if (row.isPaid === false) {\n                row.paid = 0;\n                row.isApplyTerm = false;\n            }\n            if (row.isPaid) {\n                row.paid = vm.$_numeral(row.netAmount).value() - (row.waived || 0);\n                row.netAmount = formatCurrency(row.netAmount);\n            }\n            else {\n                row.netAmount = formatCurrency(row.netAmount);\n                row.paid = 0;\n            }\n            this.schPaymentData[index] = row;\n            vm.getTotal();\n        },\n        updateSchPaymentDetailPaid(row, index) {\n            if (row.netAmount !== row.paid) {\n                if (row.paid > 0) {\n                    row.isPaid = true;\n                } else {\n                    row.isPaid = false;\n                }\n                row.netAmount = row.netAmount;\n                this.schPaymentData[index] = row;\n            } else {\n                if (row.paid > 0) {\n                    row.isPaid = true;\n                } else {\n                    row.isPaid = false;\n                }\n                this.schPaymentData[index] = row;\n                this.updateSchPaymentDetail(row, index);\n            }\n            this.getTotal();\n        }\n        ,\n        cancel() {\n            this.resetForm();\n            this.$message({\n                type: 'info',\n                message: 'Canceled'\n            });\n        }\n        ,\n        resetForm() {\n            this.schPaymentData = [];\n            this.schPaymentForm.isPaidAll = false;\n            this.schPaymentForm.isApplyTerm = false;\n            if (this.$refs[\"schPaymentFormAdd\"]) {\n                this.$refs[\"schPaymentFormAdd\"].resetFields();\n                this.getTotal();\n\n                this.refForm = \"\";\n\n            }\n        }\n        ,\n        getTotal() {\n            let vm = this;\n            let totalNetAmount = 0;\n            let totalPaid = 0;\n            let totalWaived = 0;\n            vm.schPaymentData.forEach(function (obj) {\n                if (obj.isShow) {\n                    totalNetAmount += parseFloat(vm.$_numeral(obj.netAmount).value() || 0);\n                    totalPaid += parseFloat(vm.$_numeral(obj.paid).value() || 0);\n                    totalWaived += parseFloat(vm.$_numeral(obj.waived).value() || 0);\n                }\n            });\n            let companyDoc = WB_waterBillingSetup.findOne({rolesArea: Session.get(\"area\")});\n            this.currencySymbol = getCurrencySymbolById(companyDoc.baseCurrency);\n            vm.schPaymentForm.totalNetAmount = formatCurrency(totalNetAmount, companyDoc.baseCurrency);\n            vm.schPaymentForm.totalWaived = formatCurrency(totalWaived, companyDoc.baseCurrency);\n            vm.schPaymentForm.totalPaid = formatCurrency(totalPaid + vm.schPaymentForm.penalty + vm.schPaymentForm.fee, companyDoc.baseCurrency);\n            vm.schPaymentForm.balanceUnPaid = formatCurrency(totalNetAmount - totalPaid - totalWaived, companyDoc.baseCurrency);\n        }\n        ,\n        overDueStatus(val) {\n            let vm = this;\n            if (val) {\n                vm.schPaymentData.map((obj) => {\n                    if (obj.isShow === true && (obj.receivePaymentScheduleDate.getTime() > vm.schPaymentForm.paymentDate.getTime())) {\n                        obj.isShow = false;\n                    }\n                    return obj;\n                })\n            } else {\n                vm.schPaymentData.map((obj) => {\n                    obj.isShow = true;\n                    return obj;\n                })\n            }\n        },\n        getPaymentNoByRoleAndDate(date) {\n            let vm = this;\n            Meteor.call(\"sch_getPaymentNoByRoleAndDate\", Session.get(\"area\"), date, (err, result) => {\n                if (!err) {\n                    vm.schPaymentForm.paymentNo = result;\n                }\n            })\n        },\n    },\n    created() {\n        this.isSearching = true;\n        this.queryData();\n        this.getTotal();\n        this.classOpt();\n        Meteor.subscribe('Sch_PaymentReact');\n\n    }\n    ,\n    computed: {\n        langConfig() {\n            let data = compoLang.filter(config => config.lang === this.langSession)[0]['payment'];\n            return data;\n        }\n    }\n}\n\n\n"]},"sourceType":"script","hash":"4374b54e6fc5c6a96d5be6a883b1c67d7c2edeba"}
