{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posTransferInventory.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posTransferInventory.vue","filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/posTransferInventory.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/spa","root":"/home/snr/Desktop/Project/spa","generatorOpts":{"filename":"/home/snr/Desktop/Project/spa/imports/vue/ui/posTransferInventory.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/spa/imports/vue/ui/posTransferInventory.vue"}},"code":"var draggable;\nmodule.link(\"vuedraggable\", {\n  \"default\": function (v) {\n    draggable = v;\n  }\n}, 0);\nvar formatCurrency;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  formatCurrency: function (v) {\n    formatCurrency = v;\n  }\n}, 1);\nvar GeneralFunction;\nmodule.link(\"../../../imports/api/methods/generalFunction\", {\n  GeneralFunction: function (v) {\n    GeneralFunction = v;\n  }\n}, 2);\nvar getCurrencySymbolById;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  getCurrencySymbolById: function (v) {\n    getCurrencySymbolById = v;\n  }\n}, 3);\nvar WB_waterBillingSetup;\nmodule.link(\"../../collection/waterBillingSetup\", {\n  WB_waterBillingSetup: function (v) {\n    WB_waterBillingSetup = v;\n  }\n}, 4);\nvar compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 5);\nvar Pos_TransferInventoryReact;\nmodule.link(\"../../collection/posTransferInventory\", {\n  Pos_TransferInventoryReact: function (v) {\n    Pos_TransferInventoryReact = v;\n  }\n}, 6);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Pos_TransferInventoryReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    }\n  },\n  components: {\n    draggable: draggable\n  },\n  data: function () {\n    return {\n      keyCode: [],\n      timeStamp: [],\n      takeBarcode: '',\n      fullscreen: true,\n      refForm: \"\",\n      posTransferInventoryData: [],\n      posTransferInventoryShowData: {},\n      posTransferInventoryDataDisplay: [],\n      multipleSelection: [],\n      posTransferInventoryId: \"\",\n      loading: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddTransferInventory: false,\n      dialogUpdateTransferInventory: false,\n      dialogShowTransferInventory: false,\n      posTransferInventoryForm: {\n        itemId: \"\",\n        itemName: \"\",\n        cost: 0,\n        rawQty: 0,\n        qty: 0,\n        price: 0,\n        amount: 0,\n        total: 0,\n        transferInventoryDate: moment().toDate(),\n        note: \"\",\n        desc: \"\",\n        locationFromId: \"\",\n        locationToId: \"\",\n        code: \"\"\n      },\n      rules: {\n        transferInventoryDate: [{\n          type: 'date',\n          required: true,\n          message: 'Please input TransferInventoryDate',\n          trigger: 'blur'\n        }],\n        locationFromId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose Location From',\n          trigger: 'change'\n        }],\n        locationToId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose Location To',\n          trigger: 'change'\n        }] // note: [{required: true, type: 'string', message: 'Please input Memo', trigger: 'blur'}],\n\n      },\n      // Options\n      itemOption: [],\n      dialog: true,\n      notifications: false,\n      sound: true,\n      widgets: false,\n      labelPosition: \"top\",\n      options: {\n        disabledDate: function (time) {\n          return false;\n        }\n      },\n      disabledDate: false,\n      type: \"\",\n      posTransferInventoryDetail: {},\n      locationOption: [],\n      disableItem: true,\n      disableLocationFrom: false,\n      skip: 0\n    };\n  },\n  mounted: function () {\n    var _this = this;\n\n    this.$jQuery('body').off();\n    var vm = this;\n    vm.options = {\n      disabledDate: function (time) {\n        var min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n        return time.getTime() < min;\n      }\n    };\n    var elem = this.$jQuery('el-dialog.transferInventory');\n\n    var checkEvent = $._data($('body').get(0), 'events');\n\n    if (checkEvent.keyup.length <= 1) {\n      this.$nextTick(function () {\n        _this.$jQuery('body').on('keyup', elem, _this.barcodeScanTransferInventory);\n      });\n    }\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, this.skip, val + this.skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      this.skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, this.skip, this.currentSize + this.skip);\n    },\n    \"posTransferInventoryForm.transferInventoryDate\": function (val) {\n      var vm = this;\n\n      if (vm.dialogUpdateTransferInventory == false) {\n        vm.posTransferInventoryForm.posTransferInventoryDate = val;\n      }\n\n      if (vm.closeDate && vm.closeDate != \"\" && vm.closeDate != undefined) {\n        vm.options = {\n          disabledDate: function (time) {\n            var min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n            return time.getTime() < min;\n          }\n        };\n      } else {\n        vm.options = {\n          disabledDate: function (time) {\n            return false;\n          }\n        };\n      }\n    },\n    \"posTransferInventoryForm.itemId\": function (val) {\n      if (val) {\n        this.addToTransferInventoryData(val);\n      }\n    },\n    \"posTransferInventoryForm.locationFromId\": function (val) {\n      if (val) {\n        this.disableItem = false;\n      } else {\n        this.disableItem = true;\n      }\n    }\n  },\n  methods: {\n    handleCloseModal: function () {\n      this.resetForm();\n      this.refForm = \"\";\n    },\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    _inputMaskTransferInventory: function () {\n      /*setTimeout(() => {\n          if ($(\".el-inputAmount\").length) {\n              new this.$_Cleave('.el-inputAmount', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n           if ($(\".el-inputDR\").length) {\n              new this.$_Cleave('.el-inputDR', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n           if ($(\".el-inputCR\").length) {\n              new this.$_Cleave('.el-inputCR', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n        }, 200)*/\n    },\n    barcodeScanTransferInventory: function (e) {\n      if (this.dialogAddTransferInventory === true || this.dialogUpdateTransferInventory === true) {\n        var scannerSensitivity = 100;\n\n        if (e.keyCode !== 13 && !isNaN(e.key)) {\n          this.takeBarcode += e.key;\n        }\n\n        this.timeStamp.push(Date.now());\n\n        if (this.timeStamp.length > 1) {\n          if (this.timeStamp[1] - this.timeStamp[0] >= scannerSensitivity) {\n            this.takeBarcode = '';\n            this.timeStamp = [];\n          } else {\n            if (e.keyCode === 13) {\n              this.posTransferInventoryForm.code = this.takeBarcode;\n              this.addToTransferInventoryData(null);\n              this.timeStamp = [];\n              this.takeBarcode = '';\n            }\n          }\n        }\n      }\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this2 = this;\n\n      Meteor.call('queryTransferInventory', {\n        q: val,\n        filter: this.filter,\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this2.posTransferInventoryDataDisplay = result.content;\n          _this2.count = result.countTransferInventory;\n        }\n\n        _this2.isSearching = false;\n      });\n    }, 300),\n    itemOpt: function () {\n      var _this3 = this;\n\n      var selector = {};\n      selector.productType = \"Inventory\";\n      Meteor.call('queryItemOption', selector, function (err, result) {\n        _this3.itemOption = result;\n      });\n    },\n    locationOpt: function () {\n      var _this4 = this;\n\n      Meteor.call('queryLocationOption', function (err, result) {\n        _this4.locationOption = result;\n      });\n    },\n    saveTransferInventory: function (isCloseDialog, event) {\n      var _this5 = this;\n\n      event.preventDefault();\n      var vm = this;\n      var item = vm.posTransferInventoryData;\n      this.$refs[\"posTransferInventoryFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var posTransferInventoryDoc = {\n            total: vm.$_numeral(vm.posTransferInventoryForm.total).value(),\n            transferInventoryDate: moment(vm.posTransferInventoryForm.transferInventoryDate).toDate(),\n            transferInventoryDateName: moment(vm.posTransferInventoryForm.transferInventoryDate).format(\"DD/MM/YYYY\"),\n            note: vm.posTransferInventoryForm.note,\n            rolesArea: Session.get('area'),\n            item: item,\n            locationFromId: vm.posTransferInventoryForm.locationFromId,\n            locationToId: vm.posTransferInventoryForm.locationToId\n          };\n          posTransferInventoryDoc.transaction = vm.posTransferInventoryData;\n          Meteor.call(\"insertTransferInventory\", posTransferInventoryDoc, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: \"Save Successfully!\",\n                type: 'success'\n              });\n              Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n\n              if (isCloseDialog) {\n                _this5.dialogAddTransferInventory = false;\n              }\n\n              vm.resetForm();\n            }\n          });\n        }\n      });\n    },\n    updateTransferInventory: function (id) {\n      event.preventDefault();\n      var vm = this;\n      vm.$refs[\"posTransferInventoryFormUpdate\"].validate(function (valid) {\n        if (valid) {\n          var posTransferInventoryDoc = {\n            total: vm.$_numeral(vm.posTransferInventoryForm.total).value(),\n            transferInventoryDate: moment(vm.posTransferInventoryForm.transferInventoryDate).toDate(),\n            transferInventoryDateName: moment(vm.posTransferInventoryForm.transferInventoryDate).format(\"DD/MM/YYYY\"),\n            note: vm.posTransferInventoryForm.note,\n            rolesArea: Session.get('area'),\n            item: vm.posTransferInventoryData,\n            locationFromId: vm.posTransferInventoryForm.locationFromId,\n            locationToId: vm.posTransferInventoryForm.locationToId\n          };\n          posTransferInventoryDoc.item = vm.posTransferInventoryData;\n          Meteor.call(\"updateTransferInventory\", posTransferInventoryDoc, id, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: \"Save Successfully!\",\n                type: 'success'\n              });\n              Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n              vm.dialogUpdateTransferInventory = false;\n              vm.resetForm();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: err.message,\n                type: 'success'\n              });\n            }\n          });\n        }\n      });\n    },\n    removeTransferInventory: function (index, row, rows) {\n      var vm = this;\n      vm.$confirm('This will permanently delete the file. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        Meteor.call(\"removeTransferInventory\", row._id, row, function (err, result) {\n          if (!err) {\n            rows.splice(index, 1);\n            vm.$message({\n              message: \"\\u179B\\u17BB\\u1794 \" + row.transferInventoryDateName + \"\\u200B \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n              type: 'success'\n            });\n            Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n          } else {\n            vm.$message({\n              type: 'error',\n              message: 'Delete Fialed'\n            });\n          }\n        });\n      }).catch(function () {\n        vm.$message({\n          type: 'info',\n          message: 'Delete canceled'\n        });\n      });\n    },\n    popupTransferInventoryAdd: function () {\n      this.refForm = \"posTransferInventoryFormAdd\";\n      this.resetForm();\n      this.itemOpt();\n      var vm = this;\n      $(\".el-dialog__title\").text(this.langConfig['add']);\n    },\n    popupTransferInventoryUpdate: function (index, row, scope) {\n      this.refForm = \"posTransferInventoryFormUpdate\";\n      this.resetForm();\n      this.itemOpt();\n      var vm = this;\n      $(\".el-dialog__title\").text(this.langConfig['update']);\n      vm.dialogUpdateTransferInventory = true;\n      vm.findTransferInventoryById(scope);\n    },\n    findTransferInventoryById: function (doc) {\n      var vm = this;\n      this.posTransferInventoryId = doc.row._id;\n      var companyDoc = WB_waterBillingSetup.findOne({\n        rolesArea: Session.get(\"area\")\n      });\n      Meteor.call(\"queryTransferInventoryById\", doc.row._id, function (err, data) {\n        vm.posTransferInventoryData = [];\n\n        if (data) {\n          vm.posTransferInventoryData = data.item;\n          vm.posTransferInventoryForm = {\n            total: formatCurrency(data.total, companyDoc.baseCurrency),\n            transferInventoryDate: moment(data.transferInventoryDate).toDate(),\n            transferInventoryDateName: moment(data.transferInventoryDate).format(\"DD/MM/YYYY\"),\n            note: data.note,\n            rolesArea: data.rolesArea,\n            item: data.item,\n            locationFromId: data.locationFromId,\n            locationToId: data.locationToId\n          };\n          vm.getTotal();\n        }\n      });\n    },\n    addToTransferInventoryData: function (val) {\n      var _this6 = this;\n\n      var vm = this;\n\n      if (val === null) {\n        val = vm.posTransferInventoryForm.code;\n      }\n\n      if (val === \"\" || val === undefined) {\n        this.$message({\n          duration: 1000,\n          message: \"Item Can't Empty!!\",\n          type: 'error'\n        });\n        var s = new buzz.sound('/the-calling.mp3');\n        s.play();\n        return false;\n      }\n\n      var isFound = vm.posTransferInventoryData.find(function (element) {\n        return element.itemId === val || element.code === val;\n      });\n\n      if (isFound !== undefined) {\n        this.$message({\n          type: 'error',\n          message: 'Item already add!'\n        });\n\n        var _s = new buzz.sound('/the-calling.mp3');\n\n        _s.play();\n\n        return false;\n      }\n\n      Meteor.call(\"queryPosProductById\", val, function (err, dataRaw) {\n        if (dataRaw) {\n          Meteor.call(\"queryPosAverageCostById\", dataRaw._id, Session.get(\"area\"), _this6.posTransferInventoryForm.locationFromId, function (err, data) {\n            if (data) {\n              vm.posTransferInventoryData.push({\n                itemId: data.itemId,\n                itemName: data.code + \" : \" + data.name,\n                cost: formatCurrency(data.averageCost),\n                rawQty: vm.$_numeral(data.qtyEnding).value(),\n                qty: 0,\n                code: dataRaw.code,\n                amount: 0,\n                desc: \"\"\n              });\n              vm.disableLocationFrom = vm.posTransferInventoryData.length > 0 ? true : false;\n              vm.posTransferInventoryForm.itemId = \"\";\n              vm.posTransferInventoryForm.code = \"\";\n              vm.$message({\n                duration: 1000,\n                message: \"\\u1794\\u1793\\u17D2\\u1790\\u17C2\\u1798 \" + data.code + \" : \" + data.name + \" បានជោគជ័យ !\",\n                type: 'success'\n              });\n\n              _this6.getTotal();\n            } else {\n              vm.$message({\n                duration: 3000,\n                message: \"ទំនិញនេះ អស់ពីស្តុកហើយ!!\",\n                type: 'error'\n              });\n\n              var _s2 = new buzz.sound('/the-calling.mp3');\n\n              _s2.play();\n            }\n          });\n        } else {\n          vm.$message({\n            duration: 1000,\n            message: \"មិនមានឈ្មេាះនេះឡើយ!!\",\n            type: 'error'\n          });\n\n          var _s3 = new buzz.sound('/the-calling.mp3');\n\n          _s3.play();\n        }\n      });\n    },\n    removeTransferInventoryDetailByIndex: function (index, row) {\n      var _this7 = this;\n\n      this.$confirm('This will permanently delete the file. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _this7.posTransferInventoryData.splice(index, 1);\n\n        _this7.$message({\n          message: \"\\u179B\\u17BB\\u1794 \" + row.itemName + \" \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n          type: 'success'\n        });\n\n        _this7.getTotal();\n\n        _this7.disableLocationFrom = _this7.posTransferInventoryData.length > 0 ? true : false;\n      }).catch(function () {\n        _this7.$message({\n          type: 'info',\n          message: 'Delete canceled'\n        });\n      });\n    },\n    updateTransferInventoryDetail: function (row, index) {\n      if (row.qty > row.rawQty) {\n        this.$message({\n          type: 'error',\n          message: 'ស្តុកមានមិនគ្រប់គ្រាន់'\n        });\n      }\n\n      row.amount = formatCurrency(this.$_numeral(row.cost).value() * row.qty);\n      this.posTransferInventoryData[index] = row;\n      var newIndex = index + 1;\n      this.getTotal();\n    },\n    cancel: function () {\n      this.resetForm();\n      this.$message({\n        type: 'info',\n        message: 'Canceled'\n      });\n    },\n    resetForm: function () {\n      this.posTransferInventoryData = [];\n      this.posTransferInventoryForm.locationFromId = \"\";\n      this.posTransferInventoryForm.locationToId = \"\";\n\n      if (this.$refs[\"posTransferInventoryFormAdd\"]) {\n        this.$refs[\"posTransferInventoryFormAdd\"].resetFields();\n        this.getTotal();\n      }\n\n      if (this.$refs[\"posTransferInventoryFormUpdate\"]) {\n        this.$refs[\"posTransferInventoryFormUpdate\"].resetFields();\n        this.getTotal();\n      }\n    },\n    getTotal: function () {\n      var vm = this;\n      var total = 0;\n      vm.posTransferInventoryData.forEach(function (obj) {\n        total += parseFloat(vm.$_numeral(obj.amount).value());\n      });\n      vm.disableLocationFrom = vm.posTransferInventoryData.length > 0 ? true : false;\n      var companyDoc = WB_waterBillingSetup.findOne({\n        rolesArea: Session.get(\"area\")\n      });\n      this.currencySymbol = getCurrencySymbolById(companyDoc.baseCurrency);\n      vm.posTransferInventoryForm.total = formatCurrency(total, companyDoc.baseCurrency);\n    },\n    popupTransferInventoryShow: function (row) {\n      var vm = this;\n      this.dialogShowTransferInventory = true;\n      $(\".el-dialog__title\").text(this.langConfig['show']);\n      Meteor.call(\"queryTransferInventoryByIdShow\", row._id, function (err, result) {\n        if (result) {\n          vm.posTransferInventoryShowData = result;\n        } else {\n          console.log(err.message);\n        }\n      });\n    }\n  },\n  created: function () {\n    this.isSearching = true;\n    this.queryData();\n    this.getTotal();\n    this.locationOpt();\n    Meteor.subscribe('Pos_TransferInventoryReact');\n  },\n  computed: {\n    langConfig: function () {\n      var _this8 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this8.langSession;\n      })[0]['transferInventory'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/spa/imports/vue/ui/posTransferInventory.vue"],"names":["draggable","module","link","v","formatCurrency","GeneralFunction","getCurrencySymbolById","WB_waterBillingSetup","compoLang","Pos_TransferInventoryReact","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","components","data","keyCode","timeStamp","takeBarcode","fullscreen","refForm","posTransferInventoryData","posTransferInventoryShowData","posTransferInventoryDataDisplay","multipleSelection","posTransferInventoryId","loading","isSearching","currentPage","count","dialogAddTransferInventory","dialogUpdateTransferInventory","dialogShowTransferInventory","posTransferInventoryForm","itemId","itemName","cost","rawQty","qty","price","amount","total","transferInventoryDate","moment","toDate","note","desc","locationFromId","locationToId","code","rules","type","required","message","trigger","itemOption","dialog","notifications","sound","widgets","labelPosition","options","disabledDate","time","posTransferInventoryDetail","locationOption","disableItem","disableLocationFrom","mounted","$jQuery","off","min","closeDate","add","getTime","elem","checkEvent","$","_data","keyup","length","$nextTick","on","barcodeScanTransferInventory","watch","val","posTransferInventoryDate","undefined","addToTransferInventoryData","methods","handleCloseModal","resetForm","handleSizeChange","handleCurrentChange","_inputMaskTransferInventory","e","scannerSensitivity","isNaN","key","push","Date","now","_","debounce","limit","Meteor","call","q","filter","err","result","content","countTransferInventory","itemOpt","selector","productType","locationOpt","saveTransferInventory","isCloseDialog","event","preventDefault","item","$refs","validate","valid","posTransferInventoryDoc","$_numeral","value","transferInventoryDateName","format","rolesArea","transaction","$message","duration","set","updateTransferInventory","id","removeTransferInventory","index","row","rows","$confirm","confirmButtonText","cancelButtonText","then","_id","splice","catch","popupTransferInventoryAdd","text","langConfig","popupTransferInventoryUpdate","scope","findTransferInventoryById","doc","companyDoc","findOne","baseCurrency","getTotal","s","buzz","play","isFound","element","dataRaw","name","averageCost","qtyEnding","removeTransferInventoryDetailByIndex","updateTransferInventoryDetail","newIndex","cancel","resetFields","forEach","obj","parseFloat","currencySymbol","popupTransferInventoryShow","console","log","created","subscribe","computed","config","lang"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable';\nimport {formatCurrency} from \"../../../imports/api/methods/roundCurrency\";\nimport {GeneralFunction} from \"../../../imports/api/methods/generalFunction\";\nimport {getCurrencySymbolById} from \"../../../imports/api/methods/roundCurrency\";\nimport {WB_waterBillingSetup} from \"../../collection/waterBillingSetup\";\nimport compoLang from '../../../both/i18n/lang/elem-label'\n// require('cleave.js/dist/addons/cleave-phone.ac');\n// require('cleave.js/dist/addons/cleave-phone.{country}');\nimport {Pos_TransferInventoryReact} from \"../../collection/posTransferInventory\";\n\nexport default {\n    meteor: {\n        langSession() {\n            return Session.get('lang') || \"en\";\n        },\n        disabledRemove() {\n            return Session.get(\"canRemove\");\n        },\n        disabledUpdate() {\n            return Session.get(\"canUpdate\");\n        },\n        newRe() {\n            let vm = this;\n            Pos_TransferInventoryReact.find({}).fetch();\n            vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n        }\n    },\n    components: {\n        draggable\n    },\n    data() {\n        return {\n            keyCode: [],\n            timeStamp: [],\n            takeBarcode: '',\n\n            fullscreen: true,\n            refForm: \"\",\n            posTransferInventoryData: [],\n            posTransferInventoryShowData: {},\n            posTransferInventoryDataDisplay: [],\n            multipleSelection: [],\n            posTransferInventoryId: \"\",\n            loading: false,\n            searchData: '',\n            isSearching: false,\n            currentPage: 1,\n            currentSize: 10,\n            count: 0,\n            dialogAddTransferInventory: false,\n            dialogUpdateTransferInventory: false,\n            dialogShowTransferInventory: false,\n\n            posTransferInventoryForm: {\n                itemId: \"\",\n                itemName: \"\",\n                cost: 0,\n                rawQty: 0,\n                qty: 0,\n                price: 0,\n                amount: 0,\n                total: 0,\n                transferInventoryDate: moment().toDate(),\n                note: \"\",\n                desc: \"\",\n                locationFromId: \"\",\n                locationToId: \"\",\n                code: \"\"\n\n            },\n            rules: {\n                transferInventoryDate: [{\n                    type: 'date',\n                    required: true,\n                    message: 'Please input TransferInventoryDate',\n                    trigger: 'blur'\n                }],\n                locationFromId: [{\n                    required: true,\n                    type: 'string',\n                    message: 'Please choose Location From',\n                    trigger: 'change'\n                }],\n                locationToId: [{\n                    required: true,\n                    type: 'string',\n                    message: 'Please choose Location To',\n                    trigger: 'change'\n                }]\n                // note: [{required: true, type: 'string', message: 'Please input Memo', trigger: 'blur'}],\n            },\n\n            // Options\n            itemOption: [],\n\n            dialog: true,\n            notifications: false,\n            sound: true,\n            widgets: false,\n            labelPosition: \"top\",\n            options: {\n                disabledDate(time) {\n                    return false;\n                }\n            },\n            disabledDate: false,\n            type: \"\",\n            posTransferInventoryDetail: {},\n            locationOption: [],\n            disableItem: true,\n            disableLocationFrom: false,\n            skip: 0\n        }\n    },\n    mounted() {\n        this.$jQuery('body').off();\n\n        let vm = this;\n        vm.options = {\n            disabledDate(time) {\n                let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                return time.getTime() < min;\n            }\n        };\n\n        let elem = this.$jQuery('el-dialog.transferInventory');\n        let checkEvent = $._data($('body').get(0), 'events');\n        if (checkEvent.keyup.length <= 1) {\n            this.$nextTick(() => {\n                this.$jQuery('body').on('keyup', elem, this.barcodeScanTransferInventory);\n            })\n        }\n    },\n    watch: {\n        currentSize(val) {\n            this.isSearching = true;\n            this.skip = (this.currentPage - 1) * val;\n            this.queryData(this.searchData, this.skip, val + this.skip);\n        },\n        currentPage(val) {\n            this.isSearching = true;\n            this.skip = (val - 1) * this.currentSize;\n            this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n        },\n        searchData(val) {\n            this.isSearching = true;\n            this.skip = (this.currentPage - 1) * this.currentSize;\n            this.queryData(val, this.skip, this.currentSize + this.skip);\n        },\n        \"posTransferInventoryForm.transferInventoryDate\"(val) {\n            let vm = this;\n            if (vm.dialogUpdateTransferInventory == false) {\n                vm.posTransferInventoryForm.posTransferInventoryDate = val;\n            }\n            if (vm.closeDate && vm.closeDate != \"\" && vm.closeDate != undefined) {\n                vm.options = {\n                    disabledDate(time) {\n                        let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                        return time.getTime() < min;\n                    }\n                }\n            } else {\n                vm.options = {\n                    disabledDate(time) {\n                        return false;\n                    }\n                }\n            }\n\n        },\n        \"posTransferInventoryForm.itemId\"(val) {\n            if (val) {\n                this.addToTransferInventoryData(val);\n            }\n        },\n        \"posTransferInventoryForm.locationFromId\"(val) {\n            if (val) {\n                this.disableItem = false;\n            } else {\n                this.disableItem = true;\n            }\n        }\n    },\n    methods: {\n        handleCloseModal() {\n\n            this.resetForm();\n            this.refForm = \"\";\n        },\n        handleSizeChange(val) {\n            this.currentSize = val;\n        },\n        handleCurrentChange(val) {\n            this.currentPage = val;\n        },\n        _inputMaskTransferInventory() {\n            /*setTimeout(() => {\n                if ($(\".el-inputAmount\").length) {\n                    new this.$_Cleave('.el-inputAmount', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n                if ($(\".el-inputDR\").length) {\n                    new this.$_Cleave('.el-inputDR', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n                if ($(\".el-inputCR\").length) {\n                    new this.$_Cleave('.el-inputCR', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n\n            }, 200)*/\n        },\n        barcodeScanTransferInventory(e) {\n            if (this.dialogAddTransferInventory === true || this.dialogUpdateTransferInventory === true) {\n                let scannerSensitivity = 100;\n                if (e.keyCode !== 13 && !isNaN(e.key)) {\n                    this.takeBarcode += e.key;\n                }\n                this.timeStamp.push(Date.now());\n                if (this.timeStamp.length > 1) {\n                    if (this.timeStamp[1] - this.timeStamp[0] >= scannerSensitivity) {\n                        this.takeBarcode = '';\n                        this.timeStamp = [];\n                    } else {\n                        if (e.keyCode === 13) {\n                            this.posTransferInventoryForm.code = this.takeBarcode;\n                            this.addToTransferInventoryData(null);\n                            this.timeStamp = [];\n                            this.takeBarcode = ''\n                        }\n                    }\n                }\n            }\n        },\n        queryData: _.debounce(function (val, skip, limit) {\n            Meteor.call('queryTransferInventory', {\n                q: val,\n                filter: this.filter,\n                options: {skip: skip || 0, limit: limit || 10}\n            }, (err, result) => {\n                if (!err) {\n                    this.posTransferInventoryDataDisplay = result.content;\n                    this.count = result.countTransferInventory;\n                }\n                this.isSearching = false;\n            });\n        }, 300),\n        itemOpt() {\n            let selector = {};\n            selector.productType = \"Inventory\";\n            Meteor.call('queryItemOption', selector, (err, result) => {\n                this.itemOption = result;\n            })\n        },\n        locationOpt() {\n            Meteor.call('queryLocationOption', (err, result) => {\n                this.locationOption = result;\n            })\n        },\n\n        saveTransferInventory(isCloseDialog, event) {\n            event.preventDefault();\n            let vm = this;\n            let item = vm.posTransferInventoryData;\n\n            this.$refs[\"posTransferInventoryFormAdd\"].validate((valid) => {\n                if (valid) {\n                    let posTransferInventoryDoc = {\n                        total: vm.$_numeral(vm.posTransferInventoryForm.total).value(),\n                        transferInventoryDate: moment(vm.posTransferInventoryForm.transferInventoryDate).toDate(),\n                        transferInventoryDateName: moment(vm.posTransferInventoryForm.transferInventoryDate).format(\"DD/MM/YYYY\"),\n\n                        note: vm.posTransferInventoryForm.note,\n\n                        rolesArea: Session.get('area'),\n                        item: item,\n                        locationFromId: vm.posTransferInventoryForm.locationFromId,\n                        locationToId: vm.posTransferInventoryForm.locationToId,\n\n                    };\n                    posTransferInventoryDoc.transaction = vm.posTransferInventoryData;\n                    Meteor.call(\"insertTransferInventory\", posTransferInventoryDoc, (err, result) => {\n                        if (!err) {\n                            vm.$message({\n                                duration: 1000,\n                                message: `Save Successfully!`,\n                                type: 'success'\n                            });\n                            Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n\n                            if (isCloseDialog) {\n                                this.dialogAddTransferInventory = false;\n                            }\n                            vm.resetForm();\n                        }\n                    })\n                }\n            })\n        },\n        updateTransferInventory(id) {\n            event.preventDefault();\n            let vm = this;\n            vm.$refs[\"posTransferInventoryFormUpdate\"].validate((valid) => {\n                if (valid) {\n                    let posTransferInventoryDoc = {\n                        total: vm.$_numeral(vm.posTransferInventoryForm.total).value(),\n                        transferInventoryDate: moment(vm.posTransferInventoryForm.transferInventoryDate).toDate(),\n                        transferInventoryDateName: moment(vm.posTransferInventoryForm.transferInventoryDate).format(\"DD/MM/YYYY\"),\n\n                        note: vm.posTransferInventoryForm.note,\n\n                        rolesArea: Session.get('area'),\n                        item: vm.posTransferInventoryData,\n                        locationFromId: vm.posTransferInventoryForm.locationFromId,\n                        locationToId: vm.posTransferInventoryForm.locationToId,\n\n                    };\n                    posTransferInventoryDoc.item = vm.posTransferInventoryData;\n                    Meteor.call(\"updateTransferInventory\", posTransferInventoryDoc, id, (err, result) => {\n                        if (!err) {\n                            vm.$message({\n                                duration: 1000,\n                                message: `Save Successfully!`,\n                                type: 'success'\n                            });\n                            Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n\n                            vm.dialogUpdateTransferInventory = false;\n\n                            vm.resetForm();\n                        } else {\n                            vm.$message({\n                                duration: 1000,\n                                message: err.message,\n                                type: 'success'\n                            });\n                        }\n                    })\n                }\n            })\n\n        },\n        removeTransferInventory(index, row, rows) {\n            let vm = this;\n            vm.$confirm('This will permanently delete the file. Continue?', 'Warning', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n                type: 'warning'\n            }).then(() => {\n                Meteor.call(\"removeTransferInventory\", row._id, row, (err, result) => {\n                    if (!err) {\n                        rows.splice(index, 1);\n                        vm.$message({\n                            message: `លុប ${row.transferInventoryDateName}​ បានជោគជ័យ`,\n                            type: 'success'\n                        });\n                        Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n\n                    } else {\n                        vm.$message({\n                            type: 'error',\n                            message: 'Delete Fialed'\n                        });\n                    }\n\n                })\n\n\n            }).catch(() => {\n                vm.$message({\n                    type: 'info',\n                    message: 'Delete canceled'\n                });\n            });\n\n        },\n        popupTransferInventoryAdd() {\n            this.refForm = \"posTransferInventoryFormAdd\";\n            this.resetForm();\n            this.itemOpt();\n            let vm = this;\n            $(\".el-dialog__title\").text(this.langConfig['add']);\n        },\n        popupTransferInventoryUpdate(index, row, scope) {\n            this.refForm = \"posTransferInventoryFormUpdate\";\n\n            this.resetForm();\n            this.itemOpt();\n            let vm = this;\n            $(\".el-dialog__title\").text(this.langConfig['update']);\n            vm.dialogUpdateTransferInventory = true;\n            vm.findTransferInventoryById(scope);\n        },\n        findTransferInventoryById(doc) {\n            let vm = this;\n            this.posTransferInventoryId = doc.row._id;\n            let companyDoc = WB_waterBillingSetup.findOne({rolesArea: Session.get(\"area\")});\n            Meteor.call(\"queryTransferInventoryById\", doc.row._id, (err, data) => {\n                vm.posTransferInventoryData = [];\n                if (data) {\n                    vm.posTransferInventoryData = data.item;\n                    vm.posTransferInventoryForm = {\n                        total: formatCurrency(data.total, companyDoc.baseCurrency),\n                        transferInventoryDate: moment(data.transferInventoryDate).toDate(),\n                        transferInventoryDateName: moment(data.transferInventoryDate).format(\"DD/MM/YYYY\"),\n\n                        note: data.note,\n\n                        rolesArea: data.rolesArea,\n                        item: data.item,\n                        locationFromId: data.locationFromId,\n                        locationToId: data.locationToId,\n                    }\n                    vm.getTotal();\n                }\n            })\n\n        },\n        addToTransferInventoryData(val) {\n            let vm = this;\n            if (val === null) {\n                val = vm.posTransferInventoryForm.code;\n            }\n            if (val === \"\" || val === undefined) {\n                this.$message({\n                    duration: 1000,\n                    message: \"Item Can't Empty!!\",\n                    type: 'error'\n                });\n                let s = new buzz.sound('/the-calling.mp3');\n                s.play();\n                return false;\n            }\n\n            let isFound = vm.posTransferInventoryData.find(function (element) {\n                return element.itemId === val || element.code === val;\n            });\n            if (isFound !== undefined) {\n                this.$message({\n                    type: 'error',\n                    message: 'Item already add!'\n                });\n                let s = new buzz.sound('/the-calling.mp3');\n                s.play();\n                return false;\n            }\n            Meteor.call(\"queryPosProductById\", val, (err, dataRaw) => {\n                if (dataRaw) {\n                    Meteor.call(\"queryPosAverageCostById\", dataRaw._id, Session.get(\"area\"), this.posTransferInventoryForm.locationFromId, (err, data) => {\n                        if (data) {\n                            vm.posTransferInventoryData.push({\n                                itemId: data.itemId,\n                                itemName: data.code + \" : \" + data.name,\n                                cost: formatCurrency(data.averageCost),\n                                rawQty: vm.$_numeral(data.qtyEnding).value(),\n                                qty: 0,\n                                code: dataRaw.code,\n                                amount: 0,\n                                desc: \"\"\n                            });\n                            vm.disableLocationFrom = vm.posTransferInventoryData.length > 0 ? true : false;\n                            vm.posTransferInventoryForm.itemId = \"\";\n                            vm.posTransferInventoryForm.code = \"\";\n                            vm.$message({\n                                duration: 1000,\n                                message: `បន្ថែម ` + data.code + \" : \" + data.name + \" បានជោគជ័យ !\",\n                                type: 'success'\n                            });\n\n                            this.getTotal();\n                        } else {\n                            vm.$message({\n                                duration: 3000,\n                                message: \"ទំនិញនេះ អស់ពីស្តុកហើយ!!\",\n                                type: 'error'\n                            });\n                            let s = new buzz.sound('/the-calling.mp3');\n                            s.play();\n                        }\n\n                    })\n                } else {\n                    vm.$message({\n                        duration: 1000,\n                        message: \"មិនមានឈ្មេាះនេះឡើយ!!\",\n                        type: 'error'\n                    });\n                    let s = new buzz.sound('/the-calling.mp3');\n                    s.play();\n                }\n            })\n        },\n        removeTransferInventoryDetailByIndex(index, row) {\n            this.$confirm('This will permanently delete the file. Continue?', 'Warning', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n                type: 'warning'\n            }).then(() => {\n\n                this.posTransferInventoryData.splice(index, 1);\n                this.$message({\n                    message: `លុប ${row.itemName} បានជោគជ័យ`,\n                    type: 'success'\n                });\n                this.getTotal();\n                this.disableLocationFrom = this.posTransferInventoryData.length > 0 ? true : false;\n\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: 'Delete canceled'\n                });\n            });\n        },\n        updateTransferInventoryDetail(row, index) {\n            if (row.qty > row.rawQty) {\n                this.$message({\n                    type: 'error',\n                    message: 'ស្តុកមានមិនគ្រប់គ្រាន់'\n                });\n            }\n            row.amount = formatCurrency(this.$_numeral(row.cost).value() * row.qty);\n            this.posTransferInventoryData[index] = row;\n            let newIndex = index + 1;\n            this.getTotal();\n        },\n        cancel() {\n            this.resetForm();\n            this.$message({\n                type: 'info',\n                message: 'Canceled'\n            });\n        },\n        resetForm() {\n            this.posTransferInventoryData = [];\n            this.posTransferInventoryForm.locationFromId = \"\";\n            this.posTransferInventoryForm.locationToId = \"\";\n\n            if (this.$refs[\"posTransferInventoryFormAdd\"]) {\n                this.$refs[\"posTransferInventoryFormAdd\"].resetFields();\n                this.getTotal();\n\n            }\n            if (this.$refs[\"posTransferInventoryFormUpdate\"]) {\n                this.$refs[\"posTransferInventoryFormUpdate\"].resetFields();\n                this.getTotal();\n            }\n        },\n        getTotal() {\n            let vm = this;\n            let total = 0;\n            vm.posTransferInventoryData.forEach(function (obj) {\n                total += parseFloat(vm.$_numeral(obj.amount).value());\n            });\n\n            vm.disableLocationFrom = vm.posTransferInventoryData.length > 0 ? true : false;\n\n            let companyDoc = WB_waterBillingSetup.findOne({rolesArea: Session.get(\"area\")});\n            this.currencySymbol = getCurrencySymbolById(companyDoc.baseCurrency);\n            vm.posTransferInventoryForm.total = formatCurrency(total, companyDoc.baseCurrency);\n\n        },\n        popupTransferInventoryShow(row) {\n            let vm = this;\n            this.dialogShowTransferInventory = true;\n            $(\".el-dialog__title\").text(this.langConfig['show']);\n            Meteor.call(\"queryTransferInventoryByIdShow\", row._id, (err, result) => {\n                if (result) {\n                    vm.posTransferInventoryShowData = result;\n                } else {\n                    console.log(err.message);\n                }\n            })\n        }\n    },\n    created() {\n        this.isSearching = true;\n        this.queryData();\n        this.getTotal();\n        this.locationOpt();\n        Meteor.subscribe('Pos_TransferInventoryReact');\n\n    },\n    computed: {\n        langConfig() {\n            let data = compoLang.filter(config => config.lang === this.langSession)[0]['transferInventory'];\n            return data;\n        }\n    }\n}\n\n\n"]},"sourceType":"script","hash":"ae1b295d073ea3e6df3390f183023825cb04bc86"}
